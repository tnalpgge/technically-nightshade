<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Technically Nightshade</title><link>https://tnalpgge.github.io/technically-nightshade/posts/</link><description>Recent content in Posts on Technically Nightshade</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 27 Dec 2022 03:00:00 +0000</lastBuildDate><atom:link href="https://tnalpgge.github.io/technically-nightshade/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Multiple Personality ZFS Part 3: No Special Snowflakes</title><link>https://tnalpgge.github.io/technically-nightshade/posts/mpzfs-3-no-special-snowflakes/</link><pubDate>Tue, 27 Dec 2022 03:00:00 +0000</pubDate><guid>https://tnalpgge.github.io/technically-nightshade/posts/mpzfs-3-no-special-snowflakes/</guid><description>I have spread story of this journey across a series of posts:
Part 0: A Questionable Idea Part 1: Switching Personalities Part 2: The Export/Import Business Part 3: No Special Snowflakes ⇐ you are here But does it reproduce? My co-workers know me as a person who likes command lines, and whose definition of a &amp;ldquo;one-liner&amp;rdquo; may be a bit&amp;hellip;expansive at times. The challenge for me, therefore, is to replicate the results in a slightly different environment, with fewer frills, with fewer graphical installs, and more typing.</description></item><item><title>Multiple Personality ZFS Part 2: The Export/Import Business</title><link>https://tnalpgge.github.io/technically-nightshade/posts/mpzfs-2-export-import-business/</link><pubDate>Tue, 27 Dec 2022 02:00:00 +0000</pubDate><guid>https://tnalpgge.github.io/technically-nightshade/posts/mpzfs-2-export-import-business/</guid><description>I have spread story of this journey across a series of posts:
Part 0: A Questionable Idea Part 1: Switching Personalities Part 2: The Export/Import Business ⇐ you are here Part 3: No Special Snowflakes Now back to the important stuff So I need to export my chosen ZFS storage pool every time Ubuntu shuts down. As much as I prefer the FreeBSD system of initialization scripts, and regard systemd with a degree of suspicion, it is generally a good idea to work within the framework that the operating system provides until it proves inadequate.</description></item><item><title>Multiple Personality ZFS Part 1: Switching Personalities</title><link>https://tnalpgge.github.io/technically-nightshade/posts/mpzfs-1-switching-personalities/</link><pubDate>Tue, 27 Dec 2022 01:00:00 +0000</pubDate><guid>https://tnalpgge.github.io/technically-nightshade/posts/mpzfs-1-switching-personalities/</guid><description>I have spread story of this journey across a series of posts:
Part 0: A Questionable Idea Part 1: Switching Personalities ⇐ you are here Part 2: The Export/Import Business Part 3: No Special Snowflakes Things are so much easier with cloud servers For my day job I spend a lot of time working on cloud-based servers that have only one operating system installed. So there&amp;rsquo;s a whole world of problems I don&amp;rsquo;t deal with on a regular basis.</description></item><item><title>Multiple Personality ZFS Part 0: A Questionable Idea</title><link>https://tnalpgge.github.io/technically-nightshade/posts/mpzfs-0-questionable-idea/</link><pubDate>Tue, 27 Dec 2022 00:00:00 +0000</pubDate><guid>https://tnalpgge.github.io/technically-nightshade/posts/mpzfs-0-questionable-idea/</guid><description>Introduction I have a computer that I use for a hobby of mine. And it runs a decent operating system for what I want to accomplish with it. But it&amp;rsquo;s not my preferred operating system. I wonder if I can share my home directory between two operating systems that never run concurrently. That sounds a lot better than copying files back and forth in an effort to keep things in sync.</description></item><item><title>sdrawkcaB gnitirW</title><link>https://tnalpgge.github.io/technically-nightshade/posts/sdrawkcab-gnitirw/</link><pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate><guid>https://tnalpgge.github.io/technically-nightshade/posts/sdrawkcab-gnitirw/</guid><description>I am no fan of modern office software. I use it under protest and under duress. It&amp;rsquo;s important software to a lot of people, but it feels like dragging a steamer trunk crammed full of clothes and equipment to the corner store at the end of the block when you just want a quick snack. So I look for alternatives in free, libre, and open-source software that are compatible with revision control systems for text files; they can run quite well on older and lower-spec machines.</description></item><item><title>Generating Royal History</title><link>https://tnalpgge.github.io/technically-nightshade/posts/generating-royal-history/</link><pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate><guid>https://tnalpgge.github.io/technically-nightshade/posts/generating-royal-history/</guid><description>Recently I found myself in a bit of a bind as someone who wants to write homebrew content for a very popular tabletop role-playing game. As is so common in many fantasy settings, there is some sort of feudal system, and there is some history of rulers, possibly with noble houses vying for power. I had arbitrarily selected &amp;ndash; with the help of the donjon Fantasy Calendar Generator &amp;ndash; that the year in the setting was in the very late 600s.</description></item></channel></rss>